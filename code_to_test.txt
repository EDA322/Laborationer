// Test program for lab 4
// Written by Angelos Arelakis
// Test program was written in ChAcc assembly
// The "inst_mem.mif" contains the assembly code (below) in machine code
// The "data_mem.mif" contains the data memory content when the program starts execution
// Values provided below are in decimal

0000  0. NOOP
0001  1. AD ACC, DM[1]		// ACC = 0 + 7
0010  2. ST ACC, DM[2]		// ACC = 7 - 2 = 5
0111  3. SB DM[3], ACC		// DM[3] = 5
0110  4. LB ACC, DM[9]		// ACC = 245
0100  5. NT ACC				// ACC = 10
0011  6. NA ACC, DM[3]		// ACC = 10 NAND 5 = 255
1010  7. SBX DM[DM[4]], ACC	// DM[DM[4]]= DM[7] = 255
1001  8. LBX ACC, DM[DM[5]]	// ACC = DM[DM[5]] = DM[3] = 5
1000  9. ADX ACC, DM[DM[4]]	// ACC = 5 + DM[DM[4]] = 5 + DM[7] = 5 + 255 = 4 (overflow = 1)
0101  10. CMP ACC, DM[8]		// ACC = 4, DM[8] = 4; --> EQ = 1, NEQ = 0
1110  11. JNE 255				// If NEQ = 1, then jump to instruction @ IM[255]
1011  12. IN DM[6], IO_BUS	// externalIn (extIn) was set to 7 in the testbench, so that DM[6] = 7
0110  13. LB ACC, DM[6]		// ACC = 7
0101  14. CMP ACC, DM[1]		// ACC = 7, DM[1] = 7; --> EQ = 1, NEQ = 0
1101  15. JEQ 17				// If EQ = 1, then jump to instruction @ IM[17]
0111  16. SB DM[0], ACC		// DM[0] = ACC = 7
1100  17. J 255				// Jump to instruction @ IM[255]
0111  18. SB DM[2], ACC		// DM[2] = 7
.
.
.
1100  255. J 255		// Jump for ever
